var io_httpgui  = require(__lib + 'io_httpgui.js'),
    Auth        = require(__lib + 'authenticator.js'),
    conf        = require(__config + 'httpserver.json');


module.exports = function(bus, history) {
    var outlet_marshal = function(ischecked) {
        return { 'command' : (ischecked ? 'on' : 'off') };
    };
    var outlet_unmarshal = function(type, time, msg) {
        return msg.command == "on";
    };
    
    return new io_httpgui(bus, [
        {
            'id' : 'profiles',
            'label' : 'Profiles',
            'listeners' : [
                { type: 'profiles.enable', listener : function(type, time, msg) {  $('#groupprofiles .tile').removeClass('selected'); $('#tile' + msg.profile).addClass("selected"); } }
            ],
            'widgets' : [
                {
                    'id'      : 'all',
                    'label'   : 'Light all',
                    'color'   : 'orange',
                    'size'    : 'double-vertical',
                    'type'    : 'action',
                    'icon'    : 'rocket',
                    'message' : { 'type' : 'profiles.enable', 'body' : { profile: 'all' } }
                },
                {
                    'id'      : 'home',
                    'label'   : 'Home',
                    'icon'    : 'home',
                    'desc'    : 'enable the home profile',
                    'color'   : 'yellow',
                    'size'    : 'double',
                    'type'    : 'action',
                    'message' : { 'type' : 'profiles.enable', 'body' : { profile: 'home' } }
                },
                {
                    'id'      : 'work',
                    'label'   : 'Work',
                    'icon'    : 'lab',
                    'desc'    : 'enable the work profile',
                    'type'    : 'action',
                    'message' : { 'type' : 'profiles.enable', 'body' : { profile: 'work' } }
                },
                {
                    'id'      : 'bed',
                    'label'   : 'Bed',
                    'desc'    : 'hit this before going to bed',
                    'icon'    : 'moon',
                    'color'   : 'greenLight',
                    'type'    : 'action',
                    'message' : { 'type' : 'profiles.enable', 'body' : { profile: 'bed' } }
                },
                {
                    'id'      : 'sleep',
                    'label'   : 'Sleep',
                    'icon'    : 'moon-2',
                    'desc'    : 'sleep, yeah right, who needs that ...',
                    'color'   : 'blueDark',
                    'type'    : 'action',
                    'message' : { 'type' : 'profiles.enable', 'body' : { profile: 'sleep' } }
                },
                {
                    'id'      : 'off',
                    'label'   : 'Shutdown',
                    'desc'    : 'shut the place down',
                    'color'   : 'darken', 
                    'type'    : 'action',
                    'icon'    : 'switch',
                    'message' : { 'type' : 'profiles.enable', 'body' : { profile: 'off' } }
                }
            ]
        },
        {
            'id' : 'heating',
            'label' : 'Heating',
            'widgets' : [
                {
                    'id'      : 'level',
                    'label'   : 'Level',
                    'type'    : 'range',
                    'message' : {
                        'type' : 'act.heating.central',
                        'marshal' : function(val) { return { 'level' : val }; },
                        'unmarshal' : function(type, time, msg) { return msg.level; }
                    },
                    'range' : { 'from' : 0, 'to' : 8 }
                }
            ]
        },
        {
            'id' : 'outlets',
            'label' : 'Power outlets',
            'widgets' : [
                {
                    'id'    : 'livingRoom',
                    'label' : 'Living room',
                    'type'  : 'switches',
                    messages: [
                        { 'label': 'Audio',     type: 'act.outlets.lr.audio',     marshal: outlet_marshal, unmarshal: outlet_unmarshal },
                        { 'label': 'Desk',      type: 'act.outlets.lr.desk',      marshal: outlet_marshal, unmarshal: outlet_unmarshal },
                        { 'label': 'Workspace', type: 'act.outlets.lr.workspace', marshal: outlet_marshal, unmarshal: outlet_unmarshal },
                    ]
                },
                {
                    'id'    : 'hallwaySwitches',
                    'label' : 'Hallway',
                    'type'  : 'switches',
                    messages: [
                        { 'label': 'Lamp',      type: 'act.outlets.hw.lamp',      marshal: outlet_marshal, unmarshal: outlet_unmarshal },
                        { 'label': 'Projector', type: 'act.outlets.lr.projector', marshal: outlet_marshal, unmarshal: outlet_unmarshal },
                    ]
                },
                {
                    'id'    : 'bedroomSwitches',
                    'label' : 'Bedroom',
                    'type'  : 'switches',
                    messages: [
                        { 'label': 'Small lamp', type: 'act.outlets.br.smalllamp', marshal: outlet_marshal, unmarshal: outlet_unmarshal },
                        { 'label': 'Main light', type: 'act.outlets.br.mainlamp',  marshal: outlet_marshal, unmarshal: outlet_unmarshal },
                    ]
                },
            ]
        },
        {
            'id' : 'surveillance',
            'label' : 'Surveillance',
            'widgets' : [
                {
                    'id'    : 'hallwayCamera',
                    'type'  : 'display',
                    'size'  : 'double double-vertical image',
                    'message' : {
                        'type' : 'sensor.camera.hallway',
                        'unmarshal': 'function(type, time, msg) { return "<img src=\\"/camera/" + msg.image.replace(/.*\\//g, "") + "\\" />"; }'
                    }
                },
                {
                    'id'    : 'voice',
                    'label' : 'Say something',
                    'desc'  : '<br /><input type="text" id="inputVoice" /><br />',
                    'type'  : 'display',
                    'size'  : 'double',
                    'message' : {
                        'type' : 'act.audio.voice',
                        'marshal': 'function(html) { var val = $("#inputVoice").val(); $("#inputVoice").val(""); return val.length == 0 ? null : { "text" : val }; }',
                        'unmarshal': 'function(type, time, msg) { return "last said: " + msg.text; }'
                    }
                }
            ]
        },
        {
            'id' : 'fitness',
            'label' : 'Fitness',
            'widgets' : [
                {
                    'id'    : 'fitnessHallway',
                    'label' : 'Hallway SenseLamp',
                    'desc'  : 'is DEAD',
                    'type'  : 'display',
                    'color' : 'red',
                    'message' : {
                        'type' : 'status.device.hallway',
                        'update': 'function(id, type, time, msg) { $(id).removeClass("bg-color-green");$(id).removeClass("bg-color-red");$(id).addClass("bg-color-" + (msg.alive?"green":"red")); $(id + " span").html("is <b>" + (msg.alive?"alive":"DEAD") + "</b>"); }'
                    }
                },
            ]
        },
        
    ])
    .serve("/camera", __root + "/tmp/camera")
    /* // enable this to use the same authorization as the httpserver
    .use_authentication(new Auth(conf.auth), function(req) {
        return req.connection.remoteAddress == '127.0.0.1';
    })
    */
    .start(8888, false);
};
